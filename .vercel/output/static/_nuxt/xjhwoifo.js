import{h as i}from"./PjYy4atI.js";import{B as b,aD as s,aO as y,aP as _,aQ as R}from"./BrLmWrYa.js";import{u as T}from"./Pn0aPADR.js";function S(n,t,c){const[e={},r]=typeof t=="string"?[{},t]:[t,c],a=b(()=>s(n)),u=b(()=>s(e.key)||"$f"+i([r,typeof a.value=="string"?a.value:"",...U(e)]));if(!e.baseURL&&typeof a.value=="string"&&a.value[0]==="/"&&a.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:f,lazy:w,default:g,transform:v,pick:O,watch:l,immediate:D,getCachedData:E,deep:A,dedupe:j,...q}=e,p=y({..._,...q,cache:typeof e.cache=="boolean"?void 0:e.cache}),F={server:f,lazy:w,default:g,transform:v,pick:O,immediate:D,getCachedData:E,deep:A,dedupe:j,watch:l===!1?[]:[...l||[],p]};let o;return T(u,()=>{var d;(d=o==null?void 0:o.abort)==null||d.call(o,new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),o=typeof AbortController<"u"?new AbortController:{};const m=s(e.timeout);let h;return m&&(h=setTimeout(()=>o.abort(new DOMException("Request aborted due to timeout.","AbortError")),m),o.signal.onabort=()=>clearTimeout(h)),(e.$fetch||globalThis.$fetch)(a.value,{signal:o.signal,...p}).finally(()=>{clearTimeout(h)})},F)}function U(n){var c;const t=[((c=s(n.method))==null?void 0:c.toUpperCase())||"GET",s(n.baseURL)];for(const e of[n.params||n.query]){const r=s(e);if(!r)continue;const a={};for(const[u,f]of Object.entries(r))a[s(u)]=s(f);t.push(a)}if(n.body){const e=s(n.body);if(!e)t.push(i(e));else if(e instanceof ArrayBuffer)t.push(i(Object.fromEntries([...new Uint8Array(e).entries()].map(([r,a])=>[r,a.toString()]))));else if(e instanceof FormData)t.push(i(Object.fromEntries(e.entries())));else if(R(e))t.push(i(y(e)));else try{t.push(i(e))}catch{console.warn("[useFetch] Failed to hash body",e)}}return t}export{S as u};
